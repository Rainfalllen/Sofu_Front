<!--  -->
<template>
  <!-- template里只能有一个根节点 -->
  <div class="collection-page">
    <div class="product-block" for="{{productList}}">
      <div class="product-card" onclick="routePdtDetail($item.item_id)">
        <image src="{{$item.url}}" class="product-image"></image>
        <div class="product-des">
          <text class="product-title">{{$item.item_name}}</text>
          <div class="score-area">
            <div for="{{$item.starNum}}">
              <image src="../Common/star-yellow.svg" class="star-icon"></image>
            </div>
            <image src="../Common/star-half.svg" class="star-icon" show="{{$item.halfStar}}"></image>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<script>
import router from '@system.router'
import fetch from '@system.fetch'
export default {

  private: {
    text: '欢迎使用Sofu',
    des: 'Sofu是基于您的肤质进行定制推荐的快应用。',
    productList: []
  },
  onInit(e) {
    var that = this
    console.log(e.userId)
    that.userId = e.userId
    console.log(that.userId)
    var url = that.$app.$def.urlPrefix + 'sofu/api/getcollectrecord/getCollectRecord/'
    fetch.fetch({
      url: url,
      data: {
        user_id: e.userId
      },
      success: function (response) {
        console.log(response)
        var jsonResponse = JSON.parse(response.data)
        for (let i = 0; i < jsonResponse.length; i++) {
          //获得产品的星星数量
          var straTot = that.computeStrNum(jsonResponse[i].comment_score)
          var productInfo = jsonResponse[i]
          productInfo.starNum = straTot.starNum
          productInfo.halfStar = straTot.halfStar
          that.productList.push(productInfo)
        }
        console.log(that.productList)
      }
    })
  },
  //计算星星个数
  computeStrNum(score) {
    console.log(score)
    var starNum = []
    var halfStarNum = []
    //计算应该放几颗星星
    var starComNum = (score / 2) - 0.5
    for (let i = 0; i < starComNum; i++) {
      starNum.push(true)
    }
    //计算放几颗半星
    var starHalfNum = score % 2
    if (starHalfNum == 1) {
      halfStarNum = true
    } else {
      halfStarNum = false
    }
    var starTotal = {}
    starTotal.starNum = starNum
    starTotal.halfStar = halfStarNum
    return starTotal
  },
  routePdtDetail(itemId) {
    router.push({
      uri: '/Pdt-detail',
      params: { 'itemId': itemId }
    })
  },
}
</script>

<style>
.collection-page {
  flex: 1;
  flex-direction: column;
  align-items: center;
}

.collection-page .product-block {
  justify-content: center;
  display: flex;
  flex-direction: column;
}

.collection-page .product-block .product-card {
  margin-top: 40px;
  height: 300px;
  justify-content: center;
  border-bottom: 1px solid #d8d8d8;
}

.collection-page .product-block .product-image {
  width: 250px;
  height: 250px;
  margin-left: 40px;
}

.collection-page .product-block .product-title {
  font-size: 50px;
  margin-top: 10px;
  lines: 2;
  height: 120px;
}

.collection-page .product-block .product-detail {
  margin-top: 20px;
  font-size: 45px;
}

.collection-page .product-block .product-des {
  width: 700px;
  display: flex;
  flex-direction: column;
  margin-right: 40px;
  margin-left: 30px;
}

.collection-page .product-block .product-des .score-area {
  margin-top: 50px;
}

.collection-page .product-block .product-des .score-area .star-icon {
  width: 45px;
  height: 45px;
}
</style>
